# -*- coding: utf-8-unix -*-
#+STARTUP: showall indent

* CPARSEC3 - a parser combinator library for C language

[[https://app.codacy.com/project/mori-d/cparsec3/dashboard][https://img.shields.io/codacy/grade/52aa85279ec5451b94fec5924651362f.svg?logo=codacy]]
[[https://circleci.com/gh/mori0091/cparsec3][https://circleci.com/gh/mori0091/cparsec3.svg?style=shield]]
[[https://codecov.io/gh/mori0091/cparsec3][https://codecov.io/gh/mori0091/cparsec3/branch/master/graph/badge.svg]]


* Feature

- *[[file:docs/concept-generics.org][Generics]]* - Generic programming for C11
  - Generic Data Types
  - Traits
  - Generic Macros

- *[[file:docs/concept-parsec.org][Parsec]]* - parsers and parser combinators
  - Stream
  - Parser
  - Parser combinator
  - Parser invocation (applying a parser to input stream)

* How to build

See [[file:docs/how_to_build.org][build-instraction]] contents for the below:
  - How to build
  - Directory structure of source tree

* API references

The /CPARSEC3/ library consists of the following portions:

- [[file:docs/api-base.org][Base library]]   ::
     /CPARSEC3/ *Base* library provides basic functionality of general purpose
     *Generic Data Types*, *Traits*, and *Generic Macros*.
  - Generic Data Types :
       ~Array(T)~, ~List(T)~, ~Maybe(T)~, and so on.
  - Traits             :
       ~Eq(T)~, ~Ord(T)~, and so on.
  - Generic Macros     :
       ~g_array(T, ...)~, ~g_eq(a, b)~, ~g_itr(c)~, and so on.

- [[file:docs/api-parsec.org][Parsec library]] ::
     /CPARSEC3/ *Parsec* library provides functionality of parser-combinators.
  - Stream
  - Built-in parsers
  - Built-in parser combinators
  - Parser invocation APIs

- [[file:docs/api-misc.org][Misc.]]          ::
     Other miscellernious APIs
  - TYEPSET macro
  - Primitive types

