// -*- coding: utf-8-unix ; mode: rust -*-

let cons = |x xs| |y|
  if y == 0 {
    x
  } else {
    xs
  }
;

let nil = |_| nil;

let null = |xs| xs == nil;
let head = |xs| xs 0;
let tail = |xs| xs 1;

let foldr = |f a xs|
  if (null xs) {
    a
  } else {
    f (head xs) (foldr f a (tail xs))
  }
;

let foldl = |f a xs|
  if (null xs) {
    a
  } else {
    foldl f (f a (head xs)) (tail xs)
  }
;

// Example:
// -------------------------------------------------------------
let (+) = |a b| a + b;
let sub = |a b| a - b;

let xs = cons 3 (cons 2 (cons 1 nil));

print (foldr (+) 0 xs);         // -> 6
print (foldl (+) 0 xs);         // -> 6
print (foldr sub 0 xs);         // -> 3 - (2 - (1 - 0)) -> 2
print (foldl sub 0 xs);         // -> ((0 - 3) - 2) - 1 -> -6
